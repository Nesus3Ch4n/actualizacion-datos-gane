name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Tests
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: 🏗️ Build with Maven
      run: |
        cd "BD_actualizacion_datos"
        ./mvnw clean compile
        
    - name: 🧪 Run tests
      run: |
        cd "BD_actualizacion_datos"
        ./mvnw test
        
    - name: 📦 Package application
      run: |
        cd "BD_actualizacion_datos"
        ./mvnw package -DskipTests

  # Frontend Tests
  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: src/package-lock.json
        
    - name: 📥 Install dependencies
      run: |
        cd src
        npm ci
        
    - name: 🧪 Run tests
      run: |
        cd src
        npm test -- --watch=false --browsers=ChromeHeadless
        
    - name: 🔍 Run linting
      run: |
        cd src
        npm run lint
        
    - name: 🏗️ Build application
      run: |
        cd src
        npm run build --prod

  # Security Scan
  security-scan:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Run security scan
      uses: github/codeql-action/init@v3
      with:
        languages: javascript, java
        
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # Deploy to staging
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, security-scan]
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🚀 Deploy to staging
      run: |
        echo "🚀 Deploying to staging environment..."
        # Add your deployment commands here
        
    - name: ✅ Notify deployment
      run: |
        echo "✅ Successfully deployed to staging"

  # Deploy to production
  deploy-production:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, security-scan]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🚀 Deploy to production
      run: |
        echo "🚀 Deploying to production environment..."
        # Add your deployment commands here
        
    - name: ✅ Notify deployment
      run: |
        echo "✅ Successfully deployed to production" 