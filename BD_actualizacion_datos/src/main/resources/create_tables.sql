-- Script completo para crear todas las tablas de la base de datos
-- Ejecutar este script para recrear la base de datos desde cero

-- Habilitar claves foráneas en SQLite
PRAGMA foreign_keys = ON;

-- ========== TABLA USUARIO (TABLA PRINCIPAL) ==========
CREATE TABLE IF NOT EXISTS USUARIO (
    ID_USUARIO INTEGER PRIMARY KEY AUTOINCREMENT,
    DOCUMENTO VARCHAR(20) UNIQUE NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    CORREO VARCHAR(100) UNIQUE NOT NULL,
    FECHA_NACIMIENTO DATE,
    CEDULA_EXPEDICION VARCHAR(50),
    PAIS_NACIMIENTO VARCHAR(50),
    CIUDAD_NACIMIENTO VARCHAR(50),
    CARGO VARCHAR(100),
    AREA VARCHAR(100),
    ESTADO_CIVIL VARCHAR(20),
    TIPO_SANGRE VARCHAR(5),
    NUMERO_FIJO VARCHAR(20),
    NUMERO_CELULAR VARCHAR(20),
    NUMERO_CORP VARCHAR(20),
    VERSION INTEGER DEFAULT 1,
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FECHA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ========== TABLA ESTUDIOS ACADÉMICOS ==========
CREATE TABLE IF NOT EXISTS ESTUDIOS (
    ID_ESTUDIOS INTEGER PRIMARY KEY AUTOINCREMENT,
    ID_USUARIO INTEGER NOT NULL,
    NIVEL_ACADEMICO VARCHAR(100),
    PROGRAMA VARCHAR(150),
    INSTITUCION VARCHAR(150),
    SEMESTRE INTEGER,
    GRADUACION VARCHAR(50),
    VERSION INTEGER DEFAULT 1,
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FECHA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO) ON DELETE CASCADE
);

-- ========== TABLA VEHÍCULOS ==========
CREATE TABLE IF NOT EXISTS VEHICULO (
    ID_VEHICULO INTEGER PRIMARY KEY AUTOINCREMENT,
    ID_USUARIO INTEGER NOT NULL,
    TIPO_VEHICULO VARCHAR(50),
    MARCA VARCHAR(50),
    MODELO VARCHAR(50),
    ANIO INTEGER,
    PLACA VARCHAR(20),
    COLOR VARCHAR(30),
    VERSION INTEGER DEFAULT 1,
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FECHA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO) ON DELETE CASCADE
);

-- ========== TABLA VIVIENDA ==========
CREATE TABLE IF NOT EXISTS VIVIENDA (
    ID_VIVIENDA INTEGER PRIMARY KEY AUTOINCREMENT,
    ID_USUARIO INTEGER NOT NULL,
    TIPO_VIVIENDA VARCHAR(50),
    DIRECCION VARCHAR(200),
    CIUDAD VARCHAR(50),
    DEPARTAMENTO VARCHAR(50),
    TIPO_ADQUISICION VARCHAR(50),
    VALOR_APROXIMADO DECIMAL(15,2),
    VERSION INTEGER DEFAULT 1,
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FECHA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO) ON DELETE CASCADE
);

-- ========== TABLA PERSONAS A CARGO (FAMILIA) ==========
CREATE TABLE IF NOT EXISTS FAMILIA (
    ID_FAMILIA INTEGER PRIMARY KEY AUTOINCREMENT,
    ID_USUARIO INTEGER NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    PARENTESCO VARCHAR(50),
    FECHA_NACIMIENTO DATE,
    OCUPACION VARCHAR(100),
    INGRESOS DECIMAL(15,2),
    VERSION INTEGER DEFAULT 1,
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FECHA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO) ON DELETE CASCADE
);

-- ========== TABLA CONTACTOS DE EMERGENCIA ==========
CREATE TABLE IF NOT EXISTS CONTACTO (
    ID_CONTACTO INTEGER PRIMARY KEY AUTOINCREMENT,
    ID_USUARIO INTEGER NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    PARENTESCO VARCHAR(50),
    TELEFONO VARCHAR(20),
    DIRECCION VARCHAR(200),
    VERSION INTEGER DEFAULT 1,
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FECHA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO) ON DELETE CASCADE
);

-- ========== TABLA RELACIONES DE CONFLICTO ==========
CREATE TABLE IF NOT EXISTS RELACION_CONF (
    ID_RELACION INTEGER PRIMARY KEY AUTOINCREMENT,
    ID_USUARIO INTEGER NOT NULL,
    TIPO_RELACION VARCHAR(100),
    NOMBRE_PERSONA VARCHAR(100),
    DESCRIPCION TEXT,
    FECHA_DECLARACION DATE,
    VERSION INTEGER DEFAULT 1,
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FECHA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO) ON DELETE CASCADE
);

-- ========== TABLA AUDITORÍA ==========
CREATE TABLE IF NOT EXISTS AUDITORIA (
    ID_AUDITORIA INTEGER PRIMARY KEY AUTOINCREMENT,
    ID_USUARIO INTEGER,
    ACCION VARCHAR(50) NOT NULL,
    TABLA_AFECTADA VARCHAR(50),
    DATOS_ANTERIORES TEXT,
    DATOS_NUEVOS TEXT,
    FECHA_ACCION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    IP_USUARIO VARCHAR(45),
    USER_AGENT TEXT
);

-- ========== CREAR ÍNDICES PARA MEJORAR RENDIMIENTO ==========

-- Índices para la tabla USUARIO
CREATE INDEX IF NOT EXISTS idx_usuario_documento ON USUARIO(DOCUMENTO);
CREATE INDEX IF NOT EXISTS idx_usuario_correo ON USUARIO(CORREO);

-- Índices para la tabla ESTUDIOS
CREATE INDEX IF NOT EXISTS idx_estudios_usuario ON ESTUDIOS(ID_USUARIO);
CREATE INDEX IF NOT EXISTS idx_estudios_nivel ON ESTUDIOS(NIVEL_ACADEMICO);

-- Índices para la tabla VEHICULO
CREATE INDEX IF NOT EXISTS idx_vehiculo_usuario ON VEHICULO(ID_USUARIO);
CREATE INDEX IF NOT EXISTS idx_vehiculo_placa ON VEHICULO(PLACA);

-- Índices para la tabla VIVIENDA
CREATE INDEX IF NOT EXISTS idx_vivienda_usuario ON VIVIENDA(ID_USUARIO);
CREATE INDEX IF NOT EXISTS idx_vivienda_tipo ON VIVIENDA(TIPO_VIVIENDA);

-- Índices para la tabla FAMILIA
CREATE INDEX IF NOT EXISTS idx_familia_usuario ON FAMILIA(ID_USUARIO);
CREATE INDEX IF NOT EXISTS idx_familia_parentesco ON FAMILIA(PARENTESCO);

-- Índices para la tabla CONTACTO
CREATE INDEX IF NOT EXISTS idx_contacto_usuario ON CONTACTO(ID_USUARIO);
CREATE INDEX IF NOT EXISTS idx_contacto_telefono ON CONTACTO(TELEFONO);

-- Índices para la tabla RELACION_CONF
CREATE INDEX IF NOT EXISTS idx_relacion_conf_usuario ON RELACION_CONF(ID_USUARIO);
CREATE INDEX IF NOT EXISTS idx_relacion_conf_tipo ON RELACION_CONF(TIPO_RELACION);

-- Índices para la tabla AUDITORIA
CREATE INDEX IF NOT EXISTS idx_auditoria_usuario ON AUDITORIA(ID_USUARIO);
CREATE INDEX IF NOT EXISTS idx_auditoria_fecha ON AUDITORIA(FECHA_ACCION);

-- ========== VERIFICAR QUE LAS CLAVES FORÁNEAS ESTÉN ACTIVAS ==========
PRAGMA foreign_key_check;

-- ========== MOSTRAR INFORMACIÓN DE LAS CLAVES FORÁNEAS ==========
PRAGMA foreign_key_list;

-- ========== INSERTAR DATOS DE PRUEBA (OPCIONAL) ==========
-- INSERT INTO USUARIO (DOCUMENTO, NOMBRE, CORREO) VALUES ('1006101211', 'Usuario de Prueba', 'test@example.com'); 