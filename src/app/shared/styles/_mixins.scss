@import 'variables';

// Mixin para sombras
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: $shadow-sm;
  } @else if $level == 2 {
    box-shadow: $shadow-md;
  } @else if $level == 3 {
    box-shadow: $shadow-lg;
  } @else if $level == 4 {
    box-shadow: $shadow-xl;
  }
}

// Mixin para transiciones
@mixin transition($property: all, $duration: $transition-normal, $timing: ease) {
  transition: $property $duration $timing;
}

// Mixin para flexbox centrado
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Mixin para flexbox con alineación personalizada
@mixin flex($direction: row, $align: center, $justify: flex-start, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
  flex-wrap: $wrap;
}

// Mixin para efectos hover en botones
@mixin button-hover-effect($scale: 1.02) {
  transform: translateY(-2px) scale($scale);
  @include box-shadow(2);
}

// Mixin para gradientes
@mixin gradient($start-color, $end-color, $direction: 135deg) {
  background: linear-gradient($direction, $start-color 0%, $end-color 100%);
}

// Mixin para texto truncado
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Mixin para texto con múltiples líneas truncadas
@mixin text-truncate-multiline($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Mixin para ocultar scrollbar
@mixin hide-scrollbar {
  scrollbar-width: none; // Firefox
  -ms-overflow-style: none; // Internet Explorer 10+
  
  &::-webkit-scrollbar {
    display: none; // WebKit
  }
}

// Mixin para responsive breakpoints
@mixin responsive($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: $breakpoint-xs) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (max-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: $breakpoint-xl) {
      @content;
    }
  }
}

// Mixin para placeholders
@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}

// Mixin para animaciones de entrada
@mixin fade-in-up($duration: 0.6s, $delay: 0s) {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp $duration ease-out $delay forwards;
}

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Mixin para animaciones de entrada desde la izquierda
@mixin fade-in-left($duration: 0.6s, $delay: 0s) {
  opacity: 0;
  transform: translateX(-20px);
  animation: fadeInLeft $duration ease-out $delay forwards;
}

@keyframes fadeInLeft {
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

// Mixin para loading spinner
@mixin loading-spinner($size: 40px, $color: $primary-color) {
  width: $size;
  height: $size;
  border: 3px solid rgba($color, 0.3);
  border-radius: $border-radius-circle;
  border-top-color: $color;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

// Mixin para cards
@mixin card($padding: $spacing-lg, $radius: $border-radius-lg, $shadow: 3) {
  background: white;
  padding: $padding;
  border-radius: $radius;
  @include box-shadow($shadow);
}

// Mixin para botones
@mixin button($bg-color: $primary-color, $text-color: white, $padding: $spacing-sm $spacing-lg) {
  background-color: $bg-color;
  color: $text-color;
  padding: $padding;
  border: none;
  border-radius: $border-radius-md;
  font-weight: 500;
  cursor: pointer;
  @include transition();
  
  &:hover:not(:disabled) {
    background-color: darken($bg-color, 10%);
    @include button-hover-effect();
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
} 